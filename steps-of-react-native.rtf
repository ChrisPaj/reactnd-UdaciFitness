{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 .SFNSText-Bold;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red8\green27\blue59;\red229\green242\blue255;\red203\green35\blue57;
\red225\green255\blue233;\red27\green31\blue34;\red91\green40\blue180;\red6\green33\blue79;\red7\green68\blue184;
\red8\green27\blue59;\red229\green242\blue255;\red70\green137\blue204;\red23\green23\blue23;\red202\green202\blue202;
\red140\green211\blue254;\red140\green211\blue254;\red23\green23\blue23;\red128\green0\blue128;\red52\green52\blue52;
\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c1961\c14902\c29804;\cssrgb\c91765\c96078\c100000;\cssrgb\c84314\c22745\c28627;
\cssrgb\c90196\c100000\c92941;\cssrgb\c14118\c16078\c18039;\cssrgb\c43529\c25882\c75686;\cssrgb\c1176\c18431\c38431;\cssrgb\c0\c36078\c77255;
\cssrgb\c1961\c14902\c29804;\cssrgb\c91765\c96078\c100000;\cssrgb\c33725\c61176\c83922;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c61176\c86275\c99608;\cssrgb\c61176\c86275\c99608;\cssrgb\c11765\c11765\c11765;\csgenericrgb\c50001\c0\c50001;\cssrgb\c26667\c26667\c26667;
\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww31660\viewh17440\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
- Update AddEntry and helpers\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/c3b244a93a6fdd484cfd9306fc05e0c2095bdbe4\
Achtung, mit Fehlern: 
\fs36 \
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0\fs24 \cf4 \cb5 return\cf6  \cf4 <\cf6 View\cf4 >\cf6 \{\cf7 getMetricMetaInfo\cf6 (\cf8 "bike"\cf6 ).getIcon\}\cf4 </\cf6 View\cf4 >\cf6 ; statt\
\cf4 return\cf6  \cf4 <\cf6 View\cf4 >\cf6 \{\cf7 getMetricMetaInfo\cf6 (\cf8 "bike"\cf6 ).getIcon()\}\cf4 </\cf6 View\cf4 >\cf6 ;\cf4 \
\
<\cf6 MaterialCommunityIcons name\cf4 =\cf8 "swim"\cf6  color\cf4 =\cf6 \{white\} size\cf4 =\cf6 \{\cf9 35\cf6 \} \cf4 /> statt\
<\cf6 MaterialCommunityIcons name\cf4 =\cf8 "swim"\cf6  color\cf4 =\cf6 \{\'93white\'94\} size\cf4 =\cf6 \{\cf9 35\cf6 \} \cf4 />\
\
\pard\pardeftab720\sl420\partightenfactor0

\f0\b\fs28 \cf2 \cb3 - Changes for AddEntry-methods\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/f710aa25881665feacf82b100643146b8d011446\
Anlegen der Methoden Increase, Decrease und Slide\
\
- Changes for AddEntry-render\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/3aa3f69d21b8a96b4b9d99f67b655772a479095f\
Anlegen <UdaciSteppers /> und <UdaciSlider />; Mappen \'fcber getMetricMetaInfo um alle Icons darzustellen und die neuen Components mit diversen props zu rendern.\
Interessant: \{\'85rest\}\
\
- Changes for AddEntry-SubmitBtn\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/fea2dbb62ef103ed0a44307dd7922bdfcab83ef2\
Einf\'fcgen Button als TouchableOpacity\
\
- Changes for AddEntry-UdaciSlider\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/528c326cc0dfafcd74199c7be9cb00d971cc8a23\
Hinzuf\'fcgen eines Sliders (wird von react-native gestellt)\
\
- Changes for AddEntry-UdaciSteppers\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/f9b86f4b8fd5c2c2c89cfa32552b67f76a48fcf3\
Ausbauen des Steppers mit Buttons (TouchableOpacity) und Icons\
\
- Update icon in AddEntry\
Icon und Text, falls Daten f\'fcr heute schon eingetragen wurden; Anlegen von TextButton\
\
\pard\pardeftab720\sl420\partightenfactor0

\f2 \cf10 \cb11 \outl0\strokewidth0 \strokec10 - Changes for Api (Implementieren einer \'93DB\'94 via AsyncStorage): \
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/78a78135ab80b78e8585f428052e76573fc8996e\
\

\f0 - Changes for Actions (Actions f\'fcr Receive_Entries und Add_Entry)\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/3aa5927c69939de2a7e36784548d703058cde5eb
\f3 \
\
\pard\pardeftab720\sl420\partightenfactor0

\f0 \cf2 \cb3 \outl0\strokewidth0 - Changes for Reducers \
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/1bcb8b1094f41b648d41acbfcfc1cbe0aff99e15\
\
- Redux implementieren\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/170f06a5b58a7539ae10d483c1407c4697361d34\
\
- connect AddEntry\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/a3e78fe08ac785e6ce372ed37bfb5bcfa19851e3\
Connecten, schreiben von dispatches, Hilfsfunktion getDailyReminderValue mit der das prop alreadyLogged \'fcber mapStateToProps auf true/false gesetzt wird\
\
- Styling containers for metric-Icons:\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/4b145ff1126a60b026aaffc72970f46c5e8692d2\
\
- weiteres Styling\
Verwenden der Platform-API, um je nach Plattform zu coden\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/c5c645478a1f631f7851463b80e216289b17b4d4\
\
\pard\pardeftab720\sl420\partightenfactor0

\f3 \cf10 \cb11 \outl0\strokewidth0 \strokec10 - Changes for style-UdaciSteppers\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/2c0d0b9ef0b36f53d793ae1452d2d20857bd9d96\
\
- Changes for style-rest\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/93add38d61a4891ae40f8c295fda079f7c1cc5d6\
\
- History Component\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/f2f0342661d87060376bf54c425793b4c3b239c9\
\
- Kalender importieren und die Funktionen seiner Eigenschaften schreiben:\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/57d249307036bc97c8b539fc3b5fcc38455a3419\
\
- Styling der History Komponenten:\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/556a167f9f773c128c6d982c27130fe7b0b27d82\
\
- Erstellen von MetricCard zur Darstellung von Tagen, bei denen Daten eingetragen wurden:\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/cdcef7571fecac412cdb1995538114b0f36a91c7\
\'85unklar, wie genau die Component UdaciFitnessCalendar genau funktioniert\'85\

\f0 \cf2 \cb3 \outl0\strokewidth0 \
- Hinzuf\'fcgen Loader:\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/1cc6fd9ce59e9acf6012aa5800b872ac98b5e209\
\
- \cf2 \cb3 createBottomTabNavigator\cf2 \cb3 :\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/9ff26370e4e5593195fdcad4d85e74f540a39220\
Im Gegensatz zum Kurs wird Tab Navigator v3 benutzt: TabNavigator ist depricated und wird durch createBottom\cf2 \cb3 TabNavigator ersetzt\
Die Tab Navigation braucht einen Wrapper, der dann die zu  rendernde Komponente darstellt:\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b0\fs24 \cf12 \cb13 \outl0\strokewidth0 \strokec12 const\cf14 \strokec14  \cf15 \strokec15 Tab\cf14 \strokec14  = \cf15 \strokec15 createBottomTabNavigator\cf14 \strokec14 (\{ Objekt \})\
\cf12 \strokec12 const\cf14 \strokec14  \cf15 \strokec15 TabsContainer\cf14 \strokec14  = \cf15 \strokec15 createAppContainer\cf14 \strokec14 (\cf15 \strokec15 Tab\cf14 \strokec14 ) // \cf16 \cb17 \outl0\strokewidth0 TabsContainer\cf14 \cb13 \outl0\strokewidth0 \strokec14  ist die Component\cb1 \
\pard\pardeftab720\sl420\partightenfactor0

\f0\b\fs28 \cf2 \cb3 \outl0\strokewidth0  \
- StatusBar:\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/b5a0e8840cbc48486056331cd92399b729700b56\
Gutes Beispiel zum Erstellen von Customized functional Components von wegen props, destructoring und \'85props\
\
\cf2 \cb3 - createStackNavigator:\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/86af918722052eebafbc2892b6cd772b51a18dd4\
Interessant: Setzen und Auslesen von params\
\
- EntryDetails: Datum als Headertext\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/7d4fba6fba7e0f9833e9645c2f34e9c058c9feed\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 - EntryDetails: Anbinden an Redux, Hauptscreen als MetricCard-Komponente darstellen\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/5d77f8d831e170fc0ffdeae1bc92a0825e71e14a\
\
- EntryDetails: Resetfunktion einf\'fchren\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/7b2103a06e2394f938168d9f1040dd6ba9ac2e2d\
Interessant: mapDispatchToProps, shouldComponentUpdate(nextProps)\
\
- AddEntry: Nach Absenden der Daten zur\'fcck (nach History)\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/18aeee6aac40702c2d86cf976a9a67c5691505cf\
Verwenden von NavigationActions, (kann aber auch alternativ gel\'f6st werden)\
\
- Live:  (Erstellen und einbinden in Tabs)\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/8f38bb640f0441383ca906597049190989be853f\
\
- Live: Stylen der Variante undetermined\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/62780584135dbfcee999b10ec3f01ec646aeb27b\
\
- Live: Stylen der Variante denied\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/70aa708e381b86471da886e01efc6568df076c54\
\
- Live: UI, wenn nicht undetermined und nicht denied\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/5a834dc7790f3612a9bebdf4b25ded34e9bfe580\
\
- Live: state permanent mit (Geo-) Daten f\'fcllen\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/654fab8ad1502c104a0501adea1819a4f9ab54c1\
componentDidMount pr\'fcft per 
\f1\b0\fs24 \cf18 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 Permissions.getAsync(Permissions.LOCATION)
\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1    ob permission vorliegt.\
Wenn positiv, wird 
\f1\b0\fs24 \cf18 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 setLocation = () => \{ Location.watchPositionAsync...
\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1  aufgerufen, die den state permanent geupdatet h\'e4lt\
\
-Live: Funktion askpermission (wird auf buttonPress ausgef\'fchrt. wie componentDidMount, nur askAsync statt getAsync)  \
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/0b092b57b530fd6b2d9e9577dd299351e74df75f\
\
- \'fcber Animations: https://www.youtube.com/watch?time_continue=345&v=lyM8LcmrdS8\
\
- Live: Verwenden der Animated Library\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/7a701a6fbe7d0331e3ae8cce7899d55ce9653bd3\
\
-helpers: Notifications, Teil 1\
https://github.com/udacity/reactnd-UdaciFitness-complete/blob/setLocalNotification/utils/helpers.js\
3 Funktionen: \
	-  
\f1\b0\fs24 \cf18 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 setLocalNotification
\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1   schaut, ob Notifications in \'93DB\'94 (AsyncStorage) existieren. Wenn nicht wird nachgefragt, ob erw\'fcnscht. Wenn ja werden alle auf dem Ger\'e4t (ungleich DB) gel\'f6scht und eine neue erstellt\
	- 
\f1\b0\fs24 \cf18 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 clearLocalNotification
\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1   l\'f6scht alle  Notifications aus \'93DB\'94 (AsyncStorage) und Ger\'e4t\
	- 
\f1\b0\fs24 \cf18 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 createNotification
\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1   gibt ein Objekt zur\'fcck, das die Notification ist \
-helpers: Notifications, Teil 2\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/63778456f674355e40044c673f4b966ebd446866\
\
- Fotos aus den Aufnahmen darstellen: https://www.youtube.com/watch?time_continue=266&v=fAqI8iGAgiQ\
\
-app.json: Metadaten einf\'fcgen\
https://github.com/udacity/reactnd-UdaciFitness-complete/commit/ca00e023b9c01139efdfb54d7dfa9e18c75b4297\
\
\

\fs30\fsmilli15400 \cf19 \cb20 \outl0\strokewidth0 \strokec19 \
\pard\pardeftab720\sl280\partightenfactor0
\cf19 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf19 \
}